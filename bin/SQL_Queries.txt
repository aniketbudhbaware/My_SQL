CREATE DATABASE employeedb;  
show databases;
use employeedb;

# drop database employeedb; 

CREATE TABLE employee_table(  
    id int NOT NULL AUTO_INCREMENT,  
    name varchar(45) NOT NULL,  
    occupation varchar(35) NOT NULL,  
    age int NOT NULL,  
    PRIMARY KEY (id)  
);  

CREATE TABLE employee_table(  
    id int AUTO_INCREMENT PRIMARY KEY,  
    name varchar(45) NOT NULL,  
    occupation varchar(35) NOT NULL,  
    age int NOT NULL  
); 

show tables;

describe employee_table;

desc employee_table;

-- drop table employee_table;
CREATE TABLE customer_table(  
    cus_id int AUTO_INCREMENT PRIMARY KEY,  
    cus_name varchar(45) NOT NULL,  
    cus_lastname varchar(35) NOT NULL,  
    cus_age int NOT NULL  
); 
 
 
ALTER TABLE employee_table  
ADD lastname varchar(40) NOT NULL;  
 
desc cus_table;
 
 
ALTER TABLE customer_table
ADD cus_address varchar(100) NOT NULL  
AFTER cus_lastname,  
ADD cus_salary int(100) NOT NULL  
AFTER cus_age;  
 
ALTER TABLE customer_table  
MODIFY cus_lastname varchar(40) NULL;

ALTER TABLE customer_table 
DROP COLUMN cus_address;  

ALTER TABLE customer_table  
RENAME TO cus_table;  

CREATE TABLE customer (    
    Id int PRIMARY KEY NOT NULL,     
    Name varchar(45) NOT NULL,     
    Product varchar(45) DEFAULT NULL,     
    Country varchar(25) DEFAULT NULL,     
    Year int NOT NULL    
);   

INSERT INTO customer ( Id, Name, Product, Country, Year)     
VALUES (1, 'Stephen', 'Computer', 'USA', 2015),     
(2, 'Joseph', 'Laptop', 'India', 2016),     
(3, 'John', 'TV', 'USA', 2016),    
(4, 'Donald', 'Laptop', 'England', 2015),    
(5, 'Joseph', 'Mobile', 'India', 2015),    
(6, 'Peter', 'Mouse', 'England', 2016);  

select * from customer;

desc customer;
truncate table customer;
drop table customer;


CREATE TABLE Persons (  
    ID int NOT NULL,  
    Name varchar(45) NOT NULL,  
    Age int CHECK (Age>=18)  
);  


INSERT INTO Persons(Id, Name, Age)   
VALUES (1,'Robert', 28), (2, 'Joseph', 35), (3, 'Peter', 40);  


INSERT INTO Persons(Id, Name, Age) VALUES (4,'Smith', 15);  


select * from Persons;
CREATE TABLE Persons (  
    ID int NOT NULL,  
    Name varchar(45) NOT NULL,  
    Age int,  
    City varchar(25) DEFAULT 'New York'  
); 

INSERT INTO Persons(Id, Name, Age, City)   
VALUES (1,'Robert', 15, 'Florida'),   
(2, 'Joseph', 35, 'California'),   
(3, 'Peter', 40, 'Alaska');  

select * from Persons;

INSERT INTO Persons(Id, Name, Age) VALUES (1,'Brayan', 15); 

--------------------------------------------------------------------------------------------------------

CREATE TABLE Persons (ID int NOT NULL, 
Name varchar(45) NOT NULL,  
    
Age int CHECK (Age>=18)  

);  

INSERT INTO Persons(Id, Name, Age)   

VALUES (1,'Robert', 28), (2, 'Joseph', 35), (3, 'Peter', 40);

select * from Persons;

INSERT INTO Persons(Id, Name, Age) VALUES (4,'Smith', 18); 


CREATE TABLE Person (ID int NOT NULL,  
   
 Name varchar(45) NOT NULL,  
   
 Age int,  
    
 City varchar(25) DEFAULT 'New York'  

); 


INSERT INTO Person(Id, Name, Age, City)   

VALUES (1,'Robert', 15, 'Florida'),   

(2, 'Joseph', 35, 'California'),   

(3, 'Peter', 40, 'Alaska'); 

select * from Person;

INSERT INTO Person(Id, Name, Age) VALUES (1,'Brayan', 15); 

INSERT INTO Person(Id, Name) VALUES (4,'sammy'); 

INSERT INTO Person(Id, Name, city) VALUES (5,'samm',''); 


CREATE TABLE Shirts ( id INT PRIMARY KEY AUTO_INCREMENT,     
 
 name VARCHAR(35),     
    
 size ENUM('small', 'medium', 'large', 'x-large')  
 
);  


select * from Shirts;

 

INSERT INTO Shirts(id, name, size)    

VALUES (1,'t-shirt', 'medium'),     

(2, 'casual-shirt', 'small'),     
(3, 'formal-shirt', 'large'); 

INSERT INTO Shirts(id, name, size)    
VALUES (5,'t-shirt', 'medium');  


CREATE TABLE Persons2 (Person_ID int PRIMARY KEY,   
   
Name varchar(45) NOT NULL,   
    
Age int,   
   
City varchar(25)  

); 

CREATE TABLE Orders (Order_ID int PRIMARY KEY,  
   
 Order_Num int NOT NULL,  
   
 Person_ID int,  
    
 FOREIGN KEY (Person_ID) REFERENCES Persons2(Person_ID)  

 );   


insert into Persons2 values(1,'john',30,'london'),
 
                          (2,'david',35,'paris'),
                           
                          (3,'roman',40,'tokiyo');

insert into Orders values(4, 555, 1),
                         
                         (5, 666, 2),
                         
                         (6, 777, 3);

insert into Orders(Order_ID,Order_Num) values (8, 1522);  

select * from Persons2;

select * from Orders;

update Orders set Person_ID = 9 where Order_ID=4;

update Orders set Person_ID = 3, Order_Num =777 where Order_ID=1;

delete from Orders where Order_ID=4;

delete from Orders where Person_ID=1;

delete from Orders order by Order_ID Desc limit 2;

select Order_ID,Order_Num,Person_ID from Orders;

select Order_ID,Order_Num,Person_ID from Orders where Order_ID=5;

select * from Orders where Person_ID in(1,1);

select * from Orders Group by Person_ID;

-----------------------------------------------------------------------------------------------


select * from Orders;

select * from Orders where Order_ID > 2 AND Person_ID  = 3;

select * from Orders;

select * from Orders where Order_ID = 2 OR Person_ID  = 2;

select * from Orders;

select * from Orders where (Order_ID > 2 AND Person_ID > 3) OR Order_Num = 111;


select distinct Person_ID from Orders;

select * from Orders order by Order_Num DESC;

select * from Orders order by Order_Num ASC;

select *,count(*) from Orders Group by Person_ID;

select *, sum(Order_Num) from Orders Group by Person_ID;

select * from Orders;

select *, Min(Order_Num) from Orders Group by Person_ID;

select * from Orders;

select *, Min(Order_Num) as Minimum_Order_num from Orders Group by Person_ID;

select * from Orders;

select *, Max(Order_Num) as Minimum_Order_num from Orders Group by Person_ID;

select * , SUM(Order_Num) from Orders where Order_ID>=2 Group by Person_ID having Order_Num > 222;


SELECT IF(200>150,1,0);

select *, SUM(Order_Num) from Orders where Order_ID>=2 Group by Person_ID having Order_Num >= 222;


SELECT IFNULL(NULL,5);

SELECT IFNULL(3,4);

CREATE TABLE table1(
   
    num_values int);

   INSERT INTO table1(num_values)
  
   VALUES(10), (20), (25);

CREATE TABLE table2(
   
   num_val int);
   
   INSERT INTO table2(num_val)
   
   VALUES(10), (20), (25);

select num_val from table1 where num_val > any(select num_val from table2);

select * from cus_table where name in('john','rock','david');

select * from cus_table where name Not in('john','rock','david');

--------------------------------------------------------------------

CREATE TABLE officers(
officerId int PRIMARY KEY,

                     officerName varchar(20) NOT NULL,
                     
address varchar(20)
);

CREATE TABLE student(
studentId int PRIMARY KEY,

                     studentName varchar(20) NOT NULL,
                     
courseName varchar(20)
);

select * from officers;

select * from student;

insert into officers values(1, 'rohan', 'delhi'),

		           (2, 'amit', 'mumbai'),
    
                           (3, 'rahul', 'pune'),
                         
                           (4, 'john', 'nagpur');

insert into student values(1, 'aryan', 'java'),

			(2, 'om', 'python'),
						
                        (3, 'yug', 'cpp'),
						
                        (4, 'sahil', 'sql'),
                        
                        (5, 'rohit', 'html'); 

select * from officers;

select * from student;    

desc officers;

desc student;  

SELECT officers.officerId, officers.officerName, officers.address, student.studentId, student.studentName, student.courseName
from officers
 
INNER JOIN student
 
ON officers.officerId = student.studentId;

UPDATE `employeedb`.`student` SET `studentId` = '6' WHERE (`studentId` = '4');

UPDATE `employeedb`.`student` SET `studentId` = '6' WHERE (`studentId` = '5');

select * from officers;

select * from student;  

 SELECT officers.officerId, officers.officerName, officers.address, student.studentId, student.studentName, student.courseName
 from officers
 LEFT JOIN student
 ON 
 officers.officerId = student.studentId;

SELECT officers.officerId, officers.officerName, officers.address, student.studentId, student.studentName, student.courseName
 from officers
 
 RIGHT JOIN student
 
 ON officers.officerId = student.studentId;

 SELECT officers.officerId, officers.officerName, officers.address, student.studentId, student.studentName, student.courseName
  from officers
 
FULL JOIN student
 
ON officers.officerId = student.studentId;

select * from officers
 
LEFT JOIN student 
ON officers.officerId=student.studentId
UNION

select * from officers

RIGHT JOIN student 
ON officers.officerId=student.studentId;

START TRANSACTION;


insert into officers values(7,'ankit','wardha');

insert into officers values(8,'nehal','banglore');

commit;

rollback;

select * from officers

START TRANSACTION;
insert into officers values(9,'shinjo','tokiyo');

select * from officers;

SAVEPOINT insert_record;
update officers set officerName= 'smith' where officerId=9;

insert into officers values(10,'nobita','japan');

select * from officers;

ROLLBACK TO SAVEPOINT insert_record;

rollback;












